###kubernetes란
- 컨테이너화된 워크로드와 서비스를 관리하기 위한 이식성
- 확장 가능한 오픈소스 플랫폼
- 선언적 구성과 자동화를 모두 용이
  - 가능한 작업
    - 여러 호스트에 걸쳐 컨테이너를 오케스트레이션
    - 하드웨어를 최대한 활용하여 엔터프라이즈 애플리케이션을 실행하는 데 필요한 리소스를 극대화
    - 애플리케이션 배포 및 업데이트를 제어하고 자동화
    - 스토리지 장착 및 추가해 스테이트풀(stateful) 애플리케이션을 실행
    - 컨테이너화된 애플리케이션과 해당 리소스를 즉시 확장
    - 선언적으로(Declaratively) 서비스를 관리함으로써, 배포한 애플리케이션이 항상 배포 목적대로 실행되도록 함
    - 자동 배치, 자동 재시작, 자동 복제, 자동 확장을 사용해 애플리케이션 상태 확인과 셀프 복구 수행

### 설치 및 설정
os: ubuntu 20.04 
- sudo -i (root 계정 접속)
- apt install docker.io
- docker ps (docker 상태 확인)
- docker run -d -p 80:80 --rm --name nginx nginx (동작 확인)
- docker stop nginx (생성한 컨테이너 삭제)
- docker rmi nginx (이미지 삭제)

- swapoff -a( Swap 기능은 본래 가용된 메모리보다 더 큰 메모리 할당을 가능하도록 하기 위함)
- sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
- vi kubeadm-install.sh (명령어 실행을 위해 shell파일 생성)
    
    kubeadm-install.sh
    sudo apt-get update && sudo apt-get install -y apt-transport-https curl
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
    deb https://apt.kubernetes.io/ kubernetes-xenial main
    EOF
    sudo apt-get update
    sudo apt-get install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

- ./kubeadm-install.sh (shell 실행)
- hostnamectl set-hostname node02 (hostname 변경)
- 고정 ip 설정을 위해 설정 파일 위치 이동
- 설정 파일을 오픈( vi 01-network-manager-all.yaml)
